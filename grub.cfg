# Firmware boot script
#
# This script expects the following Grub2 modules to be compiled
# into the grub binary (grub.img):
#
# boot linux squash4 ext2 fat part_msdos normal biosdisk loadenv echo true test
#

# If you are having grub problems, enable serial console for grub
# terminal_input is pointless for EC2, but may be useful in qemu
#
# serial --unit=0 --speed=115200
# terminal_input serial console
# terminal_output serial console

# Load the environment for the validation/fallback settings
# (image validation/fallback not added here yet...)
load_env

# Since we can't manually respond to a panic, just reboot.
set cloud_opts=panic=1 boot.panic_on_fail

# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-ebs-volumes.html#timeout-nvme-ebs-volumes
set hardware_opts=nvme.io_timeout=4294967295

# Setting serial console allows it to be captured in text with "Actions | Instance Settings | Get System Log",
# or aws ec2 get-console-output. Writing to it can be slow, though.
set console_opts=console=tty1 console=ttyS0

# Boot A or B depending on which one is active
if [ $boot = 1 ]; then
     echo "Booting partition B..."
     linux (hd0,msdos3)/boot/bzImage root=PARTUUID=04030201-03 rootwait $console_opts $cloud_opts $hardware_opts
else
     echo "Booting partition A..."
     linux (hd0,msdos2)/boot/bzImage root=PARTUUID=04030201-02 rootwait $console_opts $cloud_opts $hardware_opts
fi

# Boot!!!
boot
